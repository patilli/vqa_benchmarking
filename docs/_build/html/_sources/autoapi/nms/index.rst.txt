:mod:`nms`
==========

.. py:module:: nms


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   nms.batched_nms
   nms.box_ops_batched_nms



Attributes
~~~~~~~~~~

.. autoapisummary::

   nms.nms


.. data:: nms
   

   

.. function:: batched_nms(boxes, scores, idxs, iou_threshold)

   Same as torchvision.ops.boxes.batched_nms, but safer.


.. function:: box_ops_batched_nms(boxes, scores, idxs, iou_threshold)

   Performs non-maximum suppression in a batched fashion.

   Each index value correspond to a category, and NMS
   will not be applied between elements of different categories.

   Parameters
   ----------
   boxes : Tensor[N, 4]
       boxes where NMS will be performed. They
       are expected to be in (x1, y1, x2, y2) format
   scores : Tensor[N]
       scores for each one of the boxes
   idxs : Tensor[N]
       indices of the categories for each one of the boxes.
   iou_threshold : float
       discards all overlapping boxes
       with IoU < iou_threshold

   Returns
   -------
   keep : Tensor
       int64 tensor with the indices of
       the elements that have been kept by NMS, sorted
       in decreasing order of scores


