:mod:`vqa_benchmarking_backend.bottomupattention.dataloader.load_vg_json`
=========================================================================

.. py:module:: vqa_benchmarking_backend.bottomupattention.dataloader.load_vg_json


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   vqa_benchmarking_backend.bottomupattention.dataloader.load_vg_json.load_vg_json



.. function:: load_vg_json(json_file, image_root, dataset_name=None, extra_annotation_keys=None)

   Load a json file with COCO's instances annotation format.
   Currently supports instance detection, instance segmentation,
   and person keypoints annotations.

   Args:
       json_file (str): full path to the json file in COCO instances annotation format.
       image_root (str): the directory where the images in this json file exists.
       dataset_name (str): the name of the dataset (e.g., coco_2017_train).
           If provided, this function will also put "thing_classes" into
           the metadata associated with this dataset.
       extra_annotation_keys (list[str]): list of per-annotation keys that should also be
           loaded into the dataset dict (besides "iscrowd", "bbox", "keypoints",
           "category_id", "segmentation"). The values for these keys will be returned as-is.
           For example, the densepose annotations are loaded in this way.

   Returns:
       list[dict]: a list of dicts in Detectron2 standard format. (See
       `Using Custom Datasets </tutorials/datasets.html>`_ )

   Notes:
       1. This function does not read the image files.
          The results do not have the "image" field.


