:mod:`vqa_benchmarking_backend.bottomupattention.dataloader.transform_gen`
==========================================================================

.. py:module:: vqa_benchmarking_backend.bottomupattention.dataloader.transform_gen


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   vqa_benchmarking_backend.bottomupattention.dataloader.transform_gen.ResizeTransform
   vqa_benchmarking_backend.bottomupattention.dataloader.transform_gen.ResizeShortestEdge




.. class:: ResizeTransform(h, w, im_scale, pixel_mean)


   Bases: :py:obj:`fvcore.transforms.transform.Transform`

   Resize the image to a target size.

   .. method:: apply_image(self, img)


   .. method:: apply_coords(self, coords)


   .. method:: apply_segmentation(self, segmentation)



.. class:: ResizeShortestEdge(min_size, max_size, pixel_mean)


   Bases: :py:obj:`detectron2.data.transforms.TransformGen`

   Scale the shorter edge to the given size, with a limit of `max_size` on the longer edge.
   If `max_size` is reached, then downscale so that the longer edge does not exceed max_size.

   .. method:: get_transform(self, img)



