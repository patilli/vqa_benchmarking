Definitions:
metricName = accuracy | biasImage | biasQuestion | robustnessNoiseImage | robustnessNoiseText | robustnessSears | uncertainty



For starting page (overview table entries):
{
    "summary": [
        {
            "model": {
                "name": string,
                "parameters": int
            },
            "dataset": {
                "name": string,
                "type": "train" | "validation" | "test"
            }
            "metrics": {
                "accuracy": float,
                "biasImage": float,
                "biasQuestion": float,
                "robustnessNoiseImageImagespace": float,
                "robustnessNoiseImageFeaturespace": float,
                "robustnessNoiseText": float,
                "robustnessSears": float,
                "uncertainty": float,
            }
        }, 
    ...]
}



For metrics detail view:
{
    "metric": {
        "name": metricName,
        "model": {
            "name": string,
            "parameters": int
        },
        "dataset": {
            "name": string,
            "type": "train" | "validation" | "test"
        },
        "plot": {
            x: [float],
            y: [float]
        },
        "average": float
    }
}
Note that one pair of lists x, y in plot with the same index corresponds to one data point for the graph. 
This is a format plotly accepts directly.



For the filter view:
{
    "samples":  [
        {
            "questionId": string,
            "question": string,
            "image": string (containing encoded image data),
            "score": float 
        }
    ]
}



For the sample view:

{
    "sample":  {
        "questionId": string,
        "question": string,
        "image": string (containing encoded image data),
    },
    "metric": {
        "name": string,
        "score": float
    },
    "goldLabels": [
        {
            "answer": string,
            "score": float
        }
    ],
    "predictions": [
        {
            "answer": string,
            "score": float
        }
    ],
    "imageFeatures": [
        {
            "x": float,
            "y": float,
            "width": float,
            "height": float,
            "label": string,
            "score": float
        }
    ]
}
