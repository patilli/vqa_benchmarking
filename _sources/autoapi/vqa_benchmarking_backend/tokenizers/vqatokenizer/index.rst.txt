:mod:`vqa_benchmarking_backend.tokenizers.vqatokenizer`
=======================================================

.. py:module:: vqa_benchmarking_backend.tokenizers.vqatokenizer

.. autoapi-nested-parse::

   This code is based on OpenVQA (https://github.com/MILVLG/openvqa)



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   vqa_benchmarking_backend.tokenizers.vqatokenizer.process_punctuation
   vqa_benchmarking_backend.tokenizers.vqatokenizer.process_digit_article



Attributes
~~~~~~~~~~

.. autoapisummary::

   vqa_benchmarking_backend.tokenizers.vqatokenizer.contractions
   vqa_benchmarking_backend.tokenizers.vqatokenizer.manual_map
   vqa_benchmarking_backend.tokenizers.vqatokenizer.articles
   vqa_benchmarking_backend.tokenizers.vqatokenizer.period_strip
   vqa_benchmarking_backend.tokenizers.vqatokenizer.comma_strip
   vqa_benchmarking_backend.tokenizers.vqatokenizer.punct


.. data:: contractions
   

   

.. data:: manual_map
   

   

.. data:: articles
   :annotation: = ['a', 'an', 'the']

   

.. data:: period_strip
   

   

.. data:: comma_strip
   

   

.. data:: punct
   :annotation: = [';', '/', '[', ']', '"', '{', '}', '(', ')', '=', '+', '\\', '_', '-', '>', '<', '@', '`', ',',...

   

.. function:: process_punctuation(inText)


.. function:: process_digit_article(inText)


